# General Code Style & Formatting
- Use English for all code and documentation.
- Follow the Airbnb Style Guide for code formatting.
- Always declare the type of each variable and function (parameters and return value).
- Avoid using any.
- Create necessary types.
- Use JSDoc to document public classes and methods.
- Don't leave blank lines within a function.
- One export per file.
- Use const for variables that don't change.
- Use let for variables that change.
- Organise imports alphabetically.
- Organise imports based on the type (eg: components, hooks, utils, etc.) and seperate them with blank lines.
- Remove console logs before committing code.
- Use absolute imports.

# Naming Conventions
- Use PascalCase for React component file names (e.g., UserCard.tsx, not user-card.tsx).
- Use camelCase for variables, functions, and methods.
- Use kebab-case for file and directory names.
- Use UPPERCASE for environment variables.
- Avoid magic numbers and define constants.

# Functions & Logic
- Keep functions short and single-purpose.
- Avoid deeply nested blocks by:
- Using early returns.
- Extracting logic into utility functions.
- Use higher-order functions (map, filter, reduce) to simplify logic.
- Use default parameter values instead of null/undefined checks.

# Styling & UI
- Use Tailwind CSS for styling.

# Data Fetching & Forms
- Use TanStack Query (react-query) for frontend data fetching.
- Use React Hook Form for form handling.

# State Management & Logic
- Use Zustand for state management.
